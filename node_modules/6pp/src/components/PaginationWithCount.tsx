import { useState } from "react";
import { PaginationProps } from "../types/components.types";
import * as React from "react";

export const Pagination = ({
  totalPages = 1,
  currPage,
  setCurrPage,
  activeButtonStyle = {
    backgroundColor: "black",
    color: "white",
  },
  Button = ({ children, onClick, style }) => (
    <button
      style={{
        padding: "0.5rem 1rem",
        outline: "none",
        border: "none",
        borderRadius: "0.5rem",
        cursor: "pointer",
        backgroundColor: "#e2e8f0",
        ...style,
      }}
      onClick={onClick}
    >
      {children}
    </button>
  ),
  Container = ({ children }) => (
    <ul
      style={{
        display: "flex",
        gap: "1rem",
        listStyle: "none",
      }}
    >
      {children}
    </ul>
  ),
}: PaginationProps) => {
  const [startPage, setStartPage] = useState(1);
  const maxPageButtons = 4;

  const changePage = (page: number) => {
    setCurrPage(page);
    if (page > startPage + maxPageButtons - 1) {
      setStartPage(page);
    } else if (page < startPage) {
      setStartPage(page - maxPageButtons + 1);
    }
  };

  return (
    <Container>
      <>
        {startPage > 1 && (
          <li>
            <Button
              onClick={() => setStartPage((prev) => prev - maxPageButtons)}
            >
              Prev
            </Button>
          </li>
        )}
        {Array.from(
          { length: Math.min(maxPageButtons, totalPages) },
          (_, idx) => startPage + idx
        ).map((page) => {
          return (
            <li key={page}>
              <Button
                style={currPage === page ? activeButtonStyle : {}}
                onClick={() => changePage(page)}
              >
                {page}
              </Button>
            </li>
          );
        })}
        {totalPages > startPage + maxPageButtons - 1 && (
          <li>
            <Button
              onClick={() => setStartPage((prev) => prev + maxPageButtons)}
            >
              Next
            </Button>
          </li>
        )}
      </>
    </Container>
  );
};
