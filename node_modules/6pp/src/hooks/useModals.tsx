import * as React from "react";
import { MouseEvent, useRef, useState } from "react";
import { ConfirmModalProps, UseConfirmModalProps } from "../types/hooks.types";

const useConfirmModal = ({
  title = "Confirm Delete",
  subtitle = "Are you sure you want to delete?",
  confirmHandler,
}: UseConfirmModalProps) => {
  const modalRef = useRef<HTMLDivElement | null>(null);
  const [isOpen, setIsOpen] = useState<boolean>(false);

  const showModal = () => setIsOpen(true);
  const closeModal = () => setIsOpen(false);

  const closeHandler = (
    e: MouseEvent<HTMLDialogElement, globalThis.MouseEvent>
  ) => {
    if (!modalRef.current) return;

    const dialogDimension = modalRef.current?.getBoundingClientRect();

    if (
      e.clientX < dialogDimension.left ||
      e.clientX > dialogDimension.right ||
      e.clientY < dialogDimension.top ||
      e.clientY > dialogDimension.bottom
    )
      closeModal();
  };

  const handler = () => {
    closeModal();
    confirmHandler();
  };

  const ConfirmModal = ({
    containerStyles = {},
    noBtnStyles = {},
    yesBtnStyles = {},
    subtitleStyles = {},
    titleStyles = {},
    containerClassName,
  }: ConfirmModalProps) => (
    <section
      onKeyDown={(e) => e.preventDefault()}
      onClick={closeHandler}
      style={{
        display: isOpen ? "block" : "none",
        height: "100vh",
        width: "100%",
        position: "fixed",
        top: 0,
        left: 0,
      }}
    >
      <article
        style={{
          height: "100%",
          width: "100%",
          backgroundColor: "rgba(0,0,0,0.8)",
          backdropFilter: "blur(2px)",
        }}
      />

      <div
        className={`_6pp-confirm-modal ${containerClassName}`}
        style={{
          width: "20rem",
          backgroundColor: "white",
          padding: "1rem",
          borderRadius: "0.25rem",
          border: "none",
          position: "fixed",
          top: "50%",
          left: "50%",
          zIndex: 20,
          transform: "translate(-50%,-50%)",
          ...containerStyles,
        }}
        ref={modalRef}
      >
        <h5
          style={{
            fontFamily: "sans-serif",
            textTransform: "uppercase",
            ...titleStyles,
          }}
        >
          {title}
        </h5>
        <p
          style={{ fontFamily: "monospace", margin: "1rem", ...subtitleStyles }}
        >
          {subtitle}
        </p>
        <div
          style={{
            display: "flex",
            gap: "1rem",
            marginTop: "1rem 0",
            float: "right",
          }}
        >
          <button
            style={{
              border: "none",
              outline: "none",
              cursor: "pointer",
              padding: "0.5rem 1rem",
              borderRadius: "5px",
              backgroundColor: "inherit",
              color: "rgba(0,0,0,0.9)",
              transition: "all 0.3s",
              ...noBtnStyles,
            }}
            autoFocus
            onClick={closeModal}
          >
            No
          </button>
          <button
            style={{
              border: "none",
              outline: "none",
              cursor: "pointer",
              borderRadius: "5px",
              padding: "0.5rem 1rem",
              backgroundColor: "rgba(0,0,0,0.9)",
              color: "white",
              transition: "all 0.3s",
              ...yesBtnStyles,
            }}
            onClick={handler}
          >
            Yes
          </button>
        </div>
      </div>
    </section>
  );

  return { ConfirmModal, showModal, close };
};

export { useConfirmModal };
