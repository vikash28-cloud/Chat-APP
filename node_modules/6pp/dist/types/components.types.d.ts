import { CSSProperties, ChangeEvent, ComponentType, Dispatch, ReactElement, ReactNode, SetStateAction } from "react";
import { CarouselButtonType, PageStepperButtonType, PaginationButtonType } from "./types";
type PageStepperProps = {
    totalPages: number;
    currPage: number;
    setCurrPage: Dispatch<SetStateAction<number>>;
    Button: PageStepperButtonType;
    Container?: ComponentType<{
        children: ReactNode;
    }>;
    Typography?: ComponentType<{
        children: ReactNode;
    }>;
};
type PaginationProps = {
    totalPages: number;
    currPage: number;
    setCurrPage: Dispatch<SetStateAction<number>>;
    Button?: PaginationButtonType;
    Container?: ComponentType<{
        children: ReactNode;
    }>;
    activeButtonStyle?: CSSProperties;
};
type MyntraCarouselPropsType = {
    images: string[];
    darkMode?: boolean;
    objectFit?: "cover" | "contain" | "fill" | "none" | "scale-down";
    setIsOpen: Dispatch<SetStateAction<boolean>>;
    PrevButton: CarouselButtonType;
    NextButton: CarouselButtonType;
};
type StylishCarouselProps = {
    images: string[];
    objectFit?: "cover" | "contain" | "fill" | "none" | "scale-down";
    imageBg?: string;
    imageSize?: string[];
    sideImageSize?: string[];
};
type SliderProps = {
    images: string[];
    objectFit?: "cover" | "contain" | "fill" | "none" | "scale-down";
    PrevIcon?: ReactElement;
    NextIcon?: ReactElement;
    bgColor?: string;
    showNav?: boolean;
    showDots?: boolean;
    showThumbnails?: boolean;
    autoplay?: boolean;
    autoplayDuration?: number;
    onClick?: () => void;
};
type FireBoltPropsType = {
    size?: number;
    color?: string;
    styles?: CSSProperties;
    zoom?: string;
    mode?: "normal" | "difference";
};
type ColorType = "orange" | "black" | "white" | "crimson" | "blue" | "green" | "purple" | "pink" | "yellow" | "red";
type RangeSliderProps = {
    min?: number;
    max?: number;
    value: number;
    changeHandler: (e: ChangeEvent<HTMLInputElement>) => void;
    color?: ColorType;
};
type VideoPlayerProps = {
    src: string;
    poster?: string;
    captions?: string;
    width?: string;
    height?: string;
    qualityOptions?: number[];
    setQuality: Dispatch<SetStateAction<number>>;
};
export type { FireBoltPropsType, MyntraCarouselPropsType, PageStepperProps, PaginationProps, SliderProps, StylishCarouselProps, RangeSliderProps, VideoPlayerProps, };
